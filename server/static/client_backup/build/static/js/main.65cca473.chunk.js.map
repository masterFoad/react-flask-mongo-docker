{"version":3,"sources":["serviceWorker.js","actions/common-actions.js","reducers/app-state.js","reducers/upload-state.js","actions/upload-actions.js","reducers/gallery-state.js","actions/gallery-actions.js","reducers/index.js","components/image-drop.js","container/image-drop-container.js","components/file-upload.js","container/file-upload-container.js","components/image-details-form.js","container/image-details-form-container.js","components/modal-dialog.js","container/modal-dialog-container.js","components/backdrop-spinner.js","container/backdrop-spinner-container.js","components/modal-dialog-independent.js","components/clickable-image.js","utils/json-validator.js","components/gallery-list.js","container/gallery-list-container.js","components/main-tabs.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","isLoading","status","type","showDialog","options","dialog","appState","state","arguments","length","undefined","action","Object","assign","error","uploadState","imageToUpload","jsonToUpload","title","description","data","galleryState","imagesCache","AppStore","combineReducers","ImageDrop","props","_this","classCallCheck","this","_super","call","onDrop","picture","onImageUpload","react_default","a","createElement","compiled_default","withIcon","buttonText","onChange","imgExtension","withPreview","singleImage","React","Component","connect","_ref","isCurrentlyLoading","dispatch","image","FileUpload","onFileChange","event","onJsonUpload","target","files","fileData","selectedFile","name","lastModifiedDate","toDateString","className","style","padding","background","borderRadius","color","fontWeight","fontSize","margin","transition","cursor","outline","accept","jsonFile","ImageDetailsForm","handleTextChange","callback","value","uploadAllDetails","asyncToGenerator","regenerator_default","mark","_callee","formData","imagefile","wrap","_context","prev","next","setLoading","FormData","append","fetch","method","body","then","res","doneUploadToServer","showDiag","catch","err","console","handleClose","stop","handleOpen","setState","open","_this2","Button","variant","onClick","showDiagComponent","Paper","Container","Grid","container","spacing","item","xs","md","TextField","fullWidth","label","onTitleChange","onDescriptionChange","file_upload","image_drop","msg","closeBtn","mode","component","onOkClick","descriptionComponent","ModalDialog","log","onCancelClick","iconClassName","concat","dangerouslySetInnerHTML","__html","cancelBtn","styles","theme","backdrop","zIndex","drawer","BackdropSpinner","Backdrop","CircularProgress","compose","withStyles","ModalDialogIndependent","ImageComponent","handleShowDialog","isOpen","src","path","alt","width","height","modal_dialog_independent_ModalDialogIndependent","polygon_path","gallery_schema","yup","shape","image_path","required","image_path_polygon","category","sub-category","ImageGridList","pollServerImgCache","refreshCache","setTimeout","GridList","cellHeight","cols","map","tile","GridListTile","key","clickable_image_ImageComponent","substring","json","images","imagesList","filter","isValid","TabPanel","children","index","other","objectWithoutProperties","role","hidden","id","aria-labelledby","Box","p","Typography","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","paper","MainTabs","listOfComponents","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","newValue","aria-label","Tab","aria-controls","App","image_details_form","gallery_list","components_modal_dialog","backdrop_spinner","store","createStore","applyMiddleware","thunkMiddleware","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65cca473.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LOADING = 'LOADING';\nexport const SERVER_ERROR = 'SERVER_ERROR';\nexport const SHOW_DIALOG = 'SHOW_DIALOG';\n\nexport const isLoading = (status) => {\n    return {\n        type: LOADING,\n        status\n    }\n};\n\nexport const showDialog = (options) => {\n    return {\n        type: SHOW_DIALOG,\n        dialog: (options)\n    }\n};\n\n\nexport const serverError = (error, refresh) => {\n    return {\n        type: SERVER_ERROR,\n        error,\n        refresh\n    }\n};\n","import {LOADING, SERVER_ERROR, SHOW_DIALOG} from \"../actions/common-actions\";\n\nconst appState = (state = {isLoading: false}, action) => {\n    switch (action.type) {\n        case LOADING:\n            return Object.assign({}, state, {\n                isLoading: action.status\n            });\n        case SERVER_ERROR:\n            return Object.assign({}, state, {\n                error: \"server error, please try again\\n\" + action.error\n            });\n        case SHOW_DIALOG:\n            return Object.assign({}, state, {\n                dialog: action.dialog\n            });\n        default:\n            return state;\n    }\n};\n\nexport default appState;\n","import {\n    INPUT_DESCRIPTION,\n    INPUT_TITLE,\n    UPLOAD_DATA_TO_SERVER,\n    UPLOAD_IMAGE,\n    UPLOAD_JSON\n} from \"../actions/upload-actions\";\n\nconst getInitState = () => {\n    return {imageToUpload: [], jsonToUpload: {}, title: \"\", description: \"\"};\n};\n\n\nconst uploadState = (state = getInitState(), action) => {\n    switch (action.type) {\n        case UPLOAD_IMAGE:\n            return Object.assign({}, state, {\n                imageToUpload: action.data\n            });\n\n        case UPLOAD_JSON:\n            return Object.assign({}, state, {\n                jsonToUpload: action.data\n            });\n\n        case INPUT_TITLE:\n            return Object.assign({}, state, {\n                title: action.data\n            });\n\n        case INPUT_DESCRIPTION:\n            return Object.assign({}, state, {\n                description: action.data\n            });\n\n        case UPLOAD_DATA_TO_SERVER:\n            return getInitState();\n\n\n        default:\n            return state;\n    }\n};\n\nexport default uploadState;","export const UPLOAD_DATA_TO_SERVER = 'UPLOAD_DATA_TO_SERVER';\nexport const UPLOAD_IMAGE = 'UPLOAD_IMAGE';\nexport const UPLOAD_JSON = 'UPLOAD_JSON';\nexport const INPUT_TITLE = 'INPUT_TITLE';\nexport const INPUT_DESCRIPTION = 'INPUT_DESCRIPTION';\n\n\nexport const uploadImage = (data) => {\n    return {\n        type: UPLOAD_IMAGE,\n        data\n    }\n};\n\nexport const uploadJson = (data) => {\n    return {\n        type: UPLOAD_JSON,\n        data\n    }\n};\n\nexport const inputTitle = (data) => {\n    return {\n        type: INPUT_TITLE,\n        data\n    }\n};\n\nexport const inputDescription = (data) => {\n    return {\n        type: INPUT_DESCRIPTION,\n        data\n    }\n};\n\nexport const doneUploadToServer = () => {\n    return {\n        type: UPLOAD_DATA_TO_SERVER\n    }\n};\n\n","import {UPDATE_CACHE} from \"../actions/gallery-actions\";\n\nconst getInitState = () => {\n    return {imagesCache: []};\n};\n\n\nconst galleryState = (state = getInitState(), action) => {\n    switch (action.type) {\n        case UPDATE_CACHE:\n            return Object.assign({}, state, {\n                imagesCache: action.imagesCache\n            });\n        default:\n            return state;\n    }\n};\n\nexport default galleryState;\n","export const UPDATE_CACHE = 'UPDATE_CACHE';\n\n\nexport const updateGalleryCache = (imagesCache) => {\n    return {\n        type: UPDATE_CACHE,\n        imagesCache\n    }\n};","import {combineReducers} from 'redux';\nimport appState from './app-state';\nimport uploadState from './upload-state';\nimport galleryState from \"./gallery-state\";\n\nconst AppStore = combineReducers({\n    appState,\n    uploadState,\n    galleryState\n});\n\nexport default AppStore;\n","import React from 'react';\nimport ImageUploader from 'react-images-upload';\nimport {mapDispatchToProps, mapStateToProps} from '../container/image-drop-container';\nimport {connect} from \"react-redux\";\n\nclass ImageDrop extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onDrop = (picture) => {\n        this.props.onImageUpload(picture)\n    };\n\n    render() {\n        return (\n            <ImageUploader\n                withIcon={false}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.png', '.jpeg']}\n                withPreview={true}\n                singleImage={true}\n            />\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(ImageDrop);","import {uploadImage} from \"../actions/upload-actions\";\n\nimport React from \"react\";\n\nexport const mapStateToProps = ({uploadState, appState}) => {\n    return {\n        imageToUpload: uploadState.imageToUpload,\n        isCurrentlyLoading: appState.isLoading\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onImageUpload: (image) => {\n            dispatch(uploadImage(image))\n        }\n    }\n};","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {mapDispatchToProps, mapStateToProps} from '../container/file-upload-container'\nimport \"../styles/style.scss\"\n\nclass FileUpload extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    onFileChange = event => {\n        this.props.onJsonUpload(event.target.files[0])\n    };\n\n    fileData = () => {\n        if (this.props.jsonToUpload.selectedFile) {\n            return (\n                <div>\n                    <h2>File Details:</h2>\n                    <p>File Name: {this.props.jsonToUpload.selectedFile.name}</p>\n                    <p>\n                        Last Modified:{\" \"}\n                        {this.props.jsonToUpload.selectedFile.lastModifiedDate.toDateString()}\n                    </p>\n                </div>\n            );\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <p className={\"upload_label\"}>\n                    Choose test case json\n                </p>\n                <div>\n                    <label style={{\n                        padding: \"6px 23px\",\n                        background: \"#3f4257\",\n                        borderRadius: \"30px\",\n                        color: \"white\",\n                        fontWeight: 300,\n                        fontSize: 14,\n                        margin: \"10px 0\",\n                        transition: \"all 0.2s ease-in\",\n                        cursor: \"pointer\",\n                        outline: \"none\",\n                    }}>\n                        <input type=\"file\" accept={\".json\"} onChange={this.onFileChange} />\n                    </label>\n                </div>\n                {this.fileData()}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(FileUpload);","import {uploadJson} from \"../actions/upload-actions\";\nimport React from \"react\";\n\nexport const mapStateToProps = ({uploadState, appState}) => {\n    return {\n        jsonToUpload: uploadState.jsonToUpload,\n        isCurrentlyLoading: appState.isLoading,\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        onJsonUpload: (jsonFile) => {\n            dispatch(uploadJson(jsonFile))\n        }\n    }\n};","import {Container, Grid, TextField} from \"@material-ui/core\";\nimport React from \"react\";\nimport ImageDrop from \"./image-drop\";\nimport FileUpload from \"./file-upload\";\nimport Button from \"@material-ui/core/Button\";\nimport {connect} from \"react-redux\";\nimport {mapDispatchToProps, mapStateToProps} from \"../container/image-details-form-container\";\nimport \"../styles/style.scss\"\nimport Paper from \"@material-ui/core/Paper\";\nimport FormData from \"form-data\";\n\nclass ImageDetailsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    handleTextChange = (event, callback) => {\n        callback(event.target.value)\n    };\n\n    uploadAllDetails = async () => {\n        this.props.setLoading(true);\n        const formData = new FormData();\n        const imagefile = this.props.imageToUpload[0];\n        const jsonFile = this.props.jsonToUpload;\n        formData.append(\"file\", imagefile);\n        formData.append(\"json_details\", jsonFile);\n        formData.append(\"title\", this.props.title);\n        formData.append(\"description\", this.props.description);\n\n        fetch(\"/upload-img-details\", {\n            method: 'POST',\n            body: formData\n        })\n            .then((res) => {\n                this.props.doneUploadToServer();\n                this.props.setLoading(false);\n                if (res.status === 200) {\n                    this.props.showDiag(\"Data uploaded successfully\", \"success\")\n                } else {\n                    switch (res.status) {\n                        case 400:\n                            this.props.showDiag(\"Failed to upload details - bad request params\", \"error\");\n                            break;\n                        case 409:\n                            this.props.showDiag(\"Failed to upload details - duplicate image entry\", \"error\")\n                            break;\n                        default:\n                            this.props.showDiag(\"Failed to upload details\", \"error\")\n\n                    }\n                }\n\n            })\n            .catch(err => {\n                this.props.doneUploadToServer();\n                this.props.setLoading(false);\n                console.error(err)\n            });\n\n        this.handleClose();\n\n    };\n\n    handleOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({open: false});\n    };\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"default\" className=\"button_class\" onClick={this.handleOpen}>\n                    Open Upload Form\n                </Button>\n                {\n                    this.state.open && this.props.showDiagComponent(\n                        \"Upload image details\",\n                        <Paper>\n                            <Container>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField fullWidth label=\"Title\" variant=\"outlined\"\n                                                   onChange={(event) => this.handleTextChange(event, this.props.onTitleChange)}/>\n                                        <TextField fullWidth label=\"Description\" variant=\"outlined\"\n                                                   onChange={(event) => this.handleTextChange(event, this.props.onDescriptionChange)}/>\n                                        <FileUpload/>\n                                        <ImageDrop/>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Button variant=\"contained\" color=\"primary\" className=\"button_class\"\n                                                onClick={this.uploadAllDetails}>\n                                            Upload\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </Paper>,\n                        this.handleClose\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(ImageDetailsForm);","import {doneUploadToServer, inputDescription, inputTitle} from \"../actions/upload-actions\";\nimport {isLoading, showDialog} from \"../actions/common-actions\";\nimport React from \"react\";\n\nexport const mapStateToProps = ({uploadState}) => {\n    return {\n        imageToUpload: uploadState.imageToUpload,\n        jsonToUpload: uploadState.jsonToUpload,\n        title: uploadState.title,\n        description: uploadState.description\n    };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        setLoading: (status) => {\n            dispatch(isLoading(status))\n        },\n        onTitleChange: (title) => {\n            dispatch(inputTitle(title));\n        },\n        onDescriptionChange: (description) => {\n            dispatch(inputDescription(description))\n        },\n        showDiag: (msg, type) => {\n            dispatch(showDialog({\n                title: msg,\n                closeBtn: \"OK\",\n                mode: type\n            }))\n        },\n        showDiagComponent: (title, component, onOkClick) => {\n            dispatch(showDialog({\n                title: title,\n                closeBtn: \"Close\",\n                mode: 'warning',\n                descriptionComponent: component,\n                onOkClick: () => onOkClick && onOkClick()\n            }))\n        },\n        doneUploadToServer: () => {\n            dispatch(doneUploadToServer())\n        }\n    }\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport '../styles/modal-dialog.scss';\n\nimport {mapDispatchToProps, mapStateToProps} from '../container/modal-dialog-container'\n\nclass ModalDialog extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        console.log(this.props)\n        if (!this.props.dialog) {\n            return <div></div>;\n        }\n\n        let onOkClick = this.props.showDialog;\n        if (this.props.dialog && this.props.dialog.onOkClick) {\n            onOkClick = () => {\n                this.props.showDialog();\n                this.props.dialog.onOkClick();\n            };\n        }\n        let onCancelClick = this.props.showDialog;\n        if (this.props.dialog && this.props.dialog.onCancelClick) {\n            onCancelClick = () => {\n                this.props.showDialog();\n                this.props.dialog.onCancelClick();\n            };\n        }\n\n        let iconClassName = 'fa fa-check';\n\n        if (this.props.dialog.mode === 'error') {\n            iconClassName = 'fa fa-times';\n        }\n\n        if (this.props.dialog.mode === 'warning') {\n            iconClassName = 'fa fa-exclamation';\n        }\n\n        return (\n            <div className=\"modal-dialog\">\n                <div className={`dialog-overlay ${this.props.dialog ? \" show\" : \"\"}`}>\n                    <div className={`dialog-body ${this.props.dialog && this.props.dialog.mode === 'error'\n                        ? 'error-dialog' : this.props.dialog.mode === 'warning'\n                            ? \"warning-dialog\" : \"success-dialog\"}`}>\n                        {this.props.dialog && <div>\n                            <div className=\"header-icon\">\n                                <i className={iconClassName}></i>\n                            </div>\n                            <div className=\"header\">\n                                {this.props.dialog.title ? this.props.dialog.title : \"\"}\n                            </div>\n                            <div className=\"description\">\n                                {this.props.dialog.descriptionComponent ? this.props.dialog.descriptionComponent : \"\"}\n                            </div>\n\n                            <div className=\"description\" dangerouslySetInnerHTML={{\n                                __html: (this.props.dialog.description ? this.props.dialog.description : \"\")\n                            }}>\n\n                            </div>\n                            <div className=\"buttons\">\n                                {this.props.dialog.closeBtn &&\n                                <div className=\"ok-btn action-button\" type=\"button\"\n                                     onClick={onOkClick}>\n                                    {this.props.dialog.closeBtn}\n                                </div>}\n\n                                {this.props.dialog.cancelBtn &&\n                                <div className=\"ok-btn\" type=\"button\"\n                                     onClick={onCancelClick}>\n                                    {this.props.dialog.cancelBtn}\n                                </div>}\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(ModalDialog);","import {showDialog} from '../actions/common-actions';\n\nexport const mapStateToProps = ({appState}) => {\n    return {\n        dialog:appState.dialog,\n    };\n};\n\nexport const mapDispatchToProps = dispatch => {\n    return {\n        showDialog: () => {\n            dispatch(showDialog());\n        },\n    };\n};\n","import React, {Component} from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {connect} from \"react-redux\";\nimport {mapStateToProps} from \"../container/backdrop-spinner-container\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {compose} from \"redux\";\n\nconst styles = (theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n});\n\n\nclass BackdropSpinner extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{zIndex: 9999}}>\n                <Backdrop className={styles.backdrop} style={{zIndex: 9999}} open={this.props.isLoading}>\n                    <CircularProgress color=\"inherit\"/>\n                </Backdrop>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    withStyles(styles, {\n        name: 'BackdropSpinner',\n    }),\n    connect(mapStateToProps),\n)(BackdropSpinner);","import React from \"react\";\n\nexport const mapStateToProps = ({appState}) => {\n    return {\n        isLoading: appState.isLoading\n    };\n};","import React from 'react';\nimport '../styles/modal-dialog-independent.scss';\n\nexport default class ModalDialogIndependent extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        console.log(this.props)\n        if (!this.props.dialog) {\n            return <div></div>;\n        }\n\n        let onOkClick = this.props.showDialog;\n        if (this.props.dialog && this.props.dialog.onOkClick) {\n            onOkClick = () => {\n                this.props.dialog.onOkClick();\n            };\n        }\n        let onCancelClick = this.props.showDialog;\n        if (this.props.dialog && this.props.dialog.onCancelClick) {\n            onCancelClick = () => {\n                this.props.showDialog();\n                this.props.dialog.onCancelClick();\n            };\n        }\n\n        let iconClassName = 'fa fa-check';\n\n        if (this.props.dialog.mode === 'error') {\n            iconClassName = 'fa fa-times';\n        }\n\n        if (this.props.dialog.mode === 'warning') {\n            iconClassName = 'fa fa-exclamation';\n        }\n\n        return (\n            <div className=\"modal-dialog\">\n                <div className={`dialog-overlay ${this.props.dialog ? \" show\" : \"\"}`}>\n                    <div className={`dialog-body ${this.props.dialog && this.props.dialog.mode === 'error'\n                        ? 'error-dialog' : this.props.dialog.mode === 'warning'\n                            ? \"warning-dialog\" : \"success-dialog\"}`}>\n                        {this.props.dialog && <div>\n                            <div className=\"header-icon\">\n                                <i className={iconClassName}></i>\n                            </div>\n                            <div className=\"header\">\n                                {this.props.dialog.title ? this.props.dialog.title : \"\"}\n                            </div>\n                            <div className=\"description\">\n                                {this.props.dialog.descriptionComponent ? this.props.dialog.descriptionComponent : \"\"}\n                            </div>\n\n                            <div className=\"description\" dangerouslySetInnerHTML={{\n                                __html: (this.props.dialog.description ? this.props.dialog.description : \"\")\n                            }}>\n\n                            </div>\n                            <div className=\"buttons\">\n                                {this.props.dialog.closeBtn &&\n                                <div className=\"ok-btn action-button\" type=\"button\"\n                                     onClick={onOkClick}>\n                                    {this.props.dialog.closeBtn}\n                                </div>}\n\n                                {this.props.dialog.cancelBtn &&\n                                <div className=\"ok-btn\" type=\"button\"\n                                     onClick={onCancelClick}>\n                                    {this.props.dialog.cancelBtn}\n                                </div>}\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"../styles/clickable-image-style.scss\"\nimport ModalDialogIndependent from \"./modal-dialog-independent\";\n\nexport default class ImageComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n    }\n\n    handleShowDialog = () => {\n        this.setState({isOpen: !this.state.isOpen});\n        console.log(\"clicked\");\n    };\n\n    render() {\n        return (<div style={{zIndex: 10}}>\n            <img\n                src={this.props.path}\n                onClick={this.handleShowDialog}\n                alt=\"no image\"\n                style={{width: \"100%\", height: \"100%\"}}\n            />\n            {this.state.isOpen && <ModalDialogIndependent dialog={{\n                title: this.props.title,\n                closeBtn: \"Close\",\n                mode: 'success',\n                descriptionComponent: (<div>\n                    <div>\n                        <h5>\n                            {this.props.description}\n                        </h5>\n                    </div>\n                    <img\n                        style={{width: \"100%\", height: \"100%\"}}\n                        className=\"image\"\n                        src={this.props.polygon_path}\n                        onClick={this.handleShowDialog}\n                        alt=\"no image\"/>\n                </div>),\n                onOkClick: () => this.handleShowDialog()\n            }}/>}\n        </div>);\n    }\n}","import * as yup from 'yup';\n\nexport const gallery_schema = yup.object().shape({\n  image_path: yup.string().required(),\n  image_path_polygon: yup.string().required(),\n  category: yup.string().required(),\n  \"sub-category\" : yup.string().required(),\n});\n\n\n\n","import React, {Component} from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Button from \"@material-ui/core/Button\";\nimport ImageComponent from \"./clickable-image\";\nimport {connect} from \"react-redux\";\nimport {mapDispatchToProps, mapStateToProps} from \"../container/gallery-list-container\";\nimport '../styles/gallery-list-style.scss'\n\nclass ImageGridList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.pollServerImgCache();\n    }\n\n\n    pollServerImgCache = () => {\n        console.log(\"Polling server cache every 5 seconds\");\n        this.props.refreshCache().then(() => setTimeout(() => {\n            this.props.refreshCache()\n        }, 5000));\n    };\n\n\n    render() {\n        return (\n            <div className={\"root\"}>\n                <GridList cellHeight={160} className={\"gridList\"} cols={1}>\n                    {this.props.imagesCache.map((tile) => (\n                        <GridListTile key={tile['_id']} cols={tile.cols || 1}>\n                            <Button>\n                                <ImageComponent\n                                    title={tile.title}\n                                    description={tile.description}\n                                    path={tile.image_path.substring(1)}\n                                    polygon_path={tile.image_path_polygon.substring(1)}/>\n                            </Button>\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(ImageGridList);","import React from \"react\";\nimport {updateGalleryCache} from \"../actions/gallery-actions\";\nimport {isLoading} from \"../actions/common-actions\";\nimport {gallery_schema} from \"../utils/json-validator\"\nimport {showDialog} from \"../actions/common-actions\";\n\nexport const mapStateToProps = ({appState, galleryState}) => {\n    return {\n        imagesCache: galleryState.imagesCache,\n        isLoading: appState.isLoading\n    };\n};\n\n\nexport const mapDispatchToProps = (dispatch) => {\n    return {\n        refreshCache: () => {\n            dispatch(isLoading(true))\n            return fetch(\"/get-list-of-images\").then((res) => {\n                if (res) {\n                    return res.json()\n                } else {\n                    return {\n                        \"images\": []\n                    }\n                }\n            }).then((res) => {\n                dispatch(isLoading(false))\n                const imagesList = res[\"images\"].filter((image) => gallery_schema.isValid(image));\n                dispatch(updateGalleryCache(imagesList))\n            })\n                .catch(err => {\n                    dispatch(isLoading(false))\n                    console.error(err)\n                })\n        },\n        showDiag: (title, component, onOkClick) => {\n            dispatch(showDialog({\n                title: title,\n                closeBtn: \"Close\",\n                mode: 'success',\n                descriptionComponent: component,\n                onOkClick: () => onOkClick && onOkClick()\n            }))\n        }\n    }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function MainTabs({listOfComponents}) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    {\n                        listOfComponents.map(component => <Tab\n                            key={component.label}\n                            label={component.label} {...a11yProps(component.index)} />)\n                    }\n                </Tabs>\n            </AppBar>\n\n            {\n                listOfComponents.map(component =>\n                    (<TabPanel key={component.label} value={value} index={component.index}>\n                        {component.component}\n                    </TabPanel>))\n            }\n\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport ImageDetailsForm from \"./components/image-details-form\"\nimport ModalDialog from \"./components/modal-dialog\";\nimport BackdropSpinner from \"./components/backdrop-spinner\";\nimport ImageGridList from \"./components/gallery-list\";\nimport MainTabs from \"./components/main-tabs\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainTabs listOfComponents={[\n                {\n                    index: 0,\n                    label: \"Upload form\",\n                    component: <ImageDetailsForm/>\n                },\n                {\n                    index: 1,\n                    label: \"Gallery\",\n                    component: <ImageGridList/>\n                },\n            ]}/>\n\n            <ModalDialog/>\n            <BackdropSpinner/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport {unregister} from \"./serviceWorker\";\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport AppStore from './reducers/index';\nimport thunkMiddleware from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\n\nlet store = createStore(\n    AppStore,\n    applyMiddleware(thunkMiddleware)\n);\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nunregister();"],"sourceRoot":""}